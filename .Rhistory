setwd("Documents/ML/Classification/SpamClassifier/")
setwd("Documents/ML/Classification/SpamClassifier/")
#install.packages("tm")
setwd("Documents/ML/Classification/SpamClassifier/")
load("~/Documents/ML/Classification/SpamClassifier/.RData")
msg.match <- intersect(names(msg.freq), training.df$term)
classify.email <- function(path,training.df,prior=0.5,c=1e-6){
msg <- get.msg(path)
msg.tdm <- get.msg(msg)
msg.freq <- rowSums(as.matrix(msg.tdm))
msg.match <- intersect(names(msg.freq), training.df$term)
if(length(msg.match) < 1){
return(prior*c^(length(msg.freq)))
}
else {
match.probs <- training.df$occurrence[match(msg.match, training.df$term)]
return(prior * prod(match.probs)* c^(length(msg.freq)-length(msg.match)))
}
}
hardham.docs <- dir(hardham.path)
hardham.path <- 'data/hard_ham'
hardham.docs <- dir(hardham.path)
hardham.docs <- hardham.docs[which(hardham.docs != "cmds")]
hardham.docs <- dir(hardham.path)
hardham.docs <- hardham.docs[which(hardham.docs != "cmds")]
hardham.spamtest <- sapply(hardham.docs,
function(p) classify.email(paste(hardham.path,p,sep="/"),
training.df = spam.df))
classify.email <- function(path,training.df,prior=0.5,c=1e-6){
msg <- get.msg(path)
msg.tdm <- get.tdm(msg)
msg.freq <- rowSums(as.matrix(msg.tdm))
msg.match <- intersect(names(msg.freq), training.df$term)
if(length(msg.match) < 1){
return(prior*c^(length(msg.freq)))
}
else {
match.probs <- training.df$occurrence[match(msg.match, training.df$term)]
return(prior * prod(match.probs)* c^(length(msg.freq)-length(msg.match)))
}
}
hardham.spamtest <- sapply(hardham.docs,
function(p) classify.email(paste(hardham.path,p,sep="/"),
training.df = spam.df))
library(tm)
library(tm)
hardham.spamtest <- sapply(hardham.docs,
function(p) classify.email(paste(hardham.path,p,sep="/"),
training.df = spam.df))
hardham.hamtest <- sapply(hardham.docs,
function(p) classify.email(paste(hardham.path,p,sep="/"),
training.df = easyham.df))
hardham.res <- ifelse(hardham.spamtest > hardham.hamtest,TRUE,FALSE)
summary(hardham.res)
